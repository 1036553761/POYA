@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@

@model POYA.Areas.EduHub.Models.EArticle

@{
    var IsEdit = (bool)ViewData["IsEdit"];
}

<hr />
<div class="row">
    <div class="col">
        <form asp-action='@(IsEdit ? "Edit" : "Create")' id="EArticles_Form" name="EArticles_Form" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group ">
                <div class="row">
                    <input asp-for="Title" class="form-control col offset-3 col-6" placeholder="@(Localizer["Title"])" />
                    @*
                        <a asp-action="GetSharedImages" asp-controller="LUserFiles" asp-area="XUserFile" target="ImageSelectTab" class="col  col-1 col-sm-3 LookForImageIcon">&#128443;</a>
                    *@
                </div>
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div id="MenuToolbar" class="toolbar">
                </div>
                <div id="_ContentEditor" class="text">
                    <p>
                        @(Html.Raw(Model.Content))
                    </p>
                </div>
                @*<div id="_ContentEditor"></div>*@
                @*<input asp-for="Content" hidden />*@
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>

            <div class="form-group row">
                <div class="col col-4" id="video_div">
                    <span class="row">@Localizer["Upload videos for your article"]</span>
                    <div class="row" id="video_list_div"></div>
                    <div class="row" id="video_row_div">
                        <a class="btn btn-outline-info" id="VideoSelectBtn">@Localizer["Select video"]</a>
                    </div>
                </div>
                <div class="col col-4" id="attachment_div">
                    <span class="row">@Localizer["Upload attachments for your article"]</span>
                    <div class="row" id="attachment_list_div"></div>
                    <div class="row" id="attachment_row_div">
                        <a class="btn btn-outline-info" id="AttachmentSelectBtn">@Localizer["Select attachment"]</a>
                    </div>

                </div>
            </div>


            @*<partial name="_VideoSelectPartial" model="Model" />*@

            <div class="form-group">
                <a asp-action="Index" class="btn btn-outline-primary">&laquo; @Localizer["Back"]</a>
                <a class="btn btn-outline-info" id="EArticles_Form_Submit_A">@Localizer["Save"]</a>
                <span id="SaveProgressSpan"></span>
            </div>
        </form>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/wangEditor-3.1.1/release/wangEditor.min.js"></script>
<script>


    class _EditPartial_Data{

        /**
         * Get MD5 of file input and execute a function
         * @@param {string} Id -The id of file input
         * @@param {Function} ToDo - Execute a function(pass Id and md5) after finishing computing md5
         * @@param {boolean} IsEArticleVideo - Flag a file is video of article or not, the default is false
         */
        GetMD5(Id, ToDo,IsEArticleVideo=false) {
            var File_ = document.getElementById(_Value.FileInput(Id)).files[0];
            
            var BlobSlice_ = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice,
                ChunkSize = 20 * 1024 * 1024,
                Chunks = Math.ceil(File_.size / ChunkSize),
                CurrentChunk = 0,
                Spark_ = new SparkMD5.ArrayBuffer(),
                FileReader_ = new FileReader();
            FileReader_.onload = function (e) {
                Spark_.append(e.target.result);
                CurrentChunk++;
                if (CurrentChunk < Chunks) {
                    loadNext();
                } else {
                    let MD5 = String(Spark_.end());
                    ToDo(Id,MD5,IsEArticleVideo);
                }
            };
            FileReader_.onerror = function () {
                console.warn('oops, something went wrong');
            };
            function loadNext() {
                var Start = CurrentChunk * ChunkSize,
                    End = ((Start + ChunkSize) >= File_.size) ? File_.size : Start + ChunkSize;
                FileReader_.readAsArrayBuffer(BlobSlice_.call(File_, Start, End));
            }
            loadNext();
        }

        /**
         *
         * @@param {any} Editor - The Editor
         */
        ReadyEditor(Editor) {
            //  #region CONTENT_EDITOR

            //  #region MENU CONFIGURE
            Editor.customConfig.menus = [
                'head',
                'bold',
                'fontSize',
                'italic',
                'underline',
                'strikeThrough',
                'foreColor',
                'backColor',
                'link',
                'list',
                'justify',
                'quote',
                'emoticon',
                'image',
                'table',
                'code',
                'undo',
                'redo',
            ];
            //  #endregion


            // #region  LANGUAGE CONFIGURE

            Editor.customConfig.lang = {

                "\u8bbe\u7f6e\u6807\u9898": "@(Localizer["Title"])",
                "\u6b63\u6587":             "@(Localizer["Paragraph"])",
                "\u94fe\u63a5\u6587\u5b57": "@(Localizer["Link text"])",
                "\u56fe\u7247\u94fe\u63a5": "@(Localizer["Image link"])",
                "\u94fe\u63a5":             "@(Localizer["Link"])",
                "\u4e0a\u4f20\u56fe\u7247": "@(Localizer["Upload image"])",
                "\u4e0a\u4f20":             "@(Localizer["Upload"])",
                "\u521b\u5efa":             "@(Localizer["Initial"])",
                "\u63d2\u5165\u4ee3\u7801": "@(Localizer["Insert code"])",
                "\u7f51\u7edc\u56fe\u7247": "@(Localizer["Image url"])",
                "\u63d2\u5165\u8868\u683c": "@(Localizer["Table"])",
                "\u884c":                   "@(Localizer["line"])",
                "\u5217\u7684\u8868\u683c": "@(Localizer["col"])",
                "\u63d2\u5165":             "@(Localizer["Insert"])",
                "\u5bf9\u9f50\u65b9\u5f0f": "@(Localizer["Align"])",
                "\u5b57\u53f7":             "@(Localizer["Font size"])",
                "\u5b57\u4f53":             "@(Localizer["Font"])",
                "\u5b8b\u4f53":             "@(Localizer["Simsun"])",
                "\u5fae\u8f6f\u96c5\u9ed1": "@(Localizer["Microsoft YaHei"])",
                "\u6587\u5b57\u989c\u8272": "@(Localizer["Font color"])",
                "\u80cc\u666f\u8272":       "@(Localizer["background color"])",
                "\u8bbe\u7f6e\u5217\u8868": "@(Localizer["List"])",
                "\u6709\u5e8f\u5217\u8868": "@(Localizer["ordered list"])",
                "\u65e0\u5e8f\u5217\u8868": "@(Localizer["unordered list"])",
                "\u9760\u5de6":             "@(Localizer["Left"])",
                "\u5c45\u4e2d":             "@(Localizer["Center"])",
                "\u9760\u53f3":             "@(Localizer["Right"])",
                "\u9ed8\u8ba4":             "@(Localizer["Default"])",
                "\u65b0\u6d6a":             "@(Localizer["Sina"])",

            };

            // #endregion

            //  #region UPLOAD IMAGE CONFIGURE
            Editor.customConfig.uploadImgServer = '@(Url.Action("UploadEArticleImage"))';
            Editor.customConfig.uploadImgMaxSize = 2 * 1024 * 1024;
            Editor.customConfig.uploadImgMaxLength = 8;
            Editor.customConfig.uploadImgHeaders = {
                "L-XSRF-TOKEN": "@(csrf.GetAndStoreTokens(Context).RequestToken)"
            };
            Editor.customConfig.uploadFileName = 'EArticleImages';
            Editor.customConfig.zIndex = 1;
            //  #endregion


            Editor.create();
            @*Editor.txt.html('@(Html.Raw(Model.Content))');*@
            //  #endregion


        }

        /**
         *
         * @@param {string} id -The id
         * @@param IsVideoFileInput
         */
        RemoveFile(id,IsVideoFileInput=false) {
            $(`#${_EditPartial_Value_.FileRemoveBtnId(id)}`).remove();
            if (IsVideoFileInput) {
                $(`#${_EditPartial_Value_.LVideoFileInputId(id)}`).remove();
            } else {
                $(`#${_EditPartial_Value_.LAttachmentFileInputId(id)}`).remove();
            }
        }

        LAttachmentsOnChange(id) {
            let _Value = $(`#LAttachments_${id}`).val();
            let _Content = `<a class="btn btn-outline-danger" id="FileRemove_${id}" onclick="_EditPartial_Data_.RemoveFile('${id}')">${_Value} x</a>`;
            $("#attachment_list_div").append(_Content);
        }

        LVideosOnChange(id) {
            let _Value = $(`#LVideos_${id}`).val();
            let _Content = `<a class="btn btn-outline-danger" id="FileRemove_${id}"  onclick="_EditPartial_Data_.RemoveFile('${id}',true)">${_Value} x</a>`;
            $("#video_list_div").append(_Content);
        }
    }
    class _EditPartial_Value {
        constructor() {
            this.LAttachmentFileInputId = (id) => `LAttachments_${id}`;
            this.FileRemoveBtnId = (id)=>`FileRemove_${id}`;
            this.LVideoFileInputId = (id) => `LVideos_${id}`;
            this.LAttachmentFileInput = (id) => `<input type='file' form='EArticles_Form' hidden name='LAttachments' id='${_EditPartial_Value_.LAttachmentFileInputId(id)}' onchange='_EditPartial_Data_.LAttachmentsOnChange("${id}")'/>`;

            this.LVideoFileInput = (id) => `<input type='file' form='EArticles_Form'  hidden name='LVideos' id='${_EditPartial_Value_.LVideoFileInputId(id)}' accept='video/*'  onchange='_EditPartial_Data_.LVideosOnChange("${id}")'/>`;
        }

    }

    class _EditPartial_UI {

    }

    class _EditPartial_Service {
        /**
         *  public Guid EArticleId { get; set; }
         *  public string FileName { get; set;}
         *  public string MD5 { get; set; }
         *  public bool IsEArticleVideo { get; set; } = false;
         * */
        async CheckMD5() {
            await $("input[name='LAttachments']").each(function (index, elem) {
                let _id = this.id;
                _EditPartial_Data_.GetMD5(_id, AddId8MD5,false);
            });
            await $("input[name='LVideos']").each(function (index, elem) {
                let _id = this.id;
                _EditPartial_Data_.GetMD5(_id, AddId8MD5,true);
            });
            let eArticleFileMD5s = new Array();
            ID8MD5Array.forEach((value, index, array) => {
                eArticleFileMD5s.push({
                    EArticleId: "@Model.Id",
                    FileName: $("#" + value["ID"]).val(),
                    MD5: value["MD5"],
                    IsEArticleVideo: value["IsEArticleVideo"]
                });
            });
            let ID8MD5Form = new FormData();
            ID8MD5Form.append("eArticleFileMD5s",JSON.stringify(eArticleFileMD5s));
            $.ajax({
                url: "@Url.Action("LCheckMD5v1")",
                type: "POST",
                data: ID8MD5Form,
                 headers: {
                    "L-XSRF-TOKEN": "@(csrf.GetAndStoreTokens(Context).RequestToken)"
                },
                dataType:"json",
                success: function (Response) {
                    console.log(Response);
                }
            });
        }
        async SubmitForm(Editor) {
              $("#Content").val(Editor.txt.html());
            let _EArticles_Form_Data_=new FormData();
            _EArticles_Form_Data_.append("@(nameof(Model.Title))",$("#@nameof(Model.Title)").val());
            _EArticles_Form_Data_.append("@(nameof(Model.Content))",Editor.txt.html());
            $("input[name='LAttachments']").each(function(index,elem){
                let _id=this.id;
                console.log(_id);
                let _File=document.getElementById(_id).files[0];
                    _EArticles_Form_Data_.append("LAttachments",_File,_File.name);
            });
            $("input[name='LVideos']").each(function(index,elem){

                let _id=this.id;
                console.log(_id);
                let _File=document.getElementById(_id).files[0];
                    _EArticles_Form_Data_.append("LVideos",_File,_File.name);
            });
            $.ajax({
                //  #region
                url: "@(Url.Action(IsEdit?"Edit":"Create"))",
                type: "POST",
                data: _EArticles_Form_Data_,
                processData: false,
                contentType: false,
                async: false,
                //  contentType: "multipart/form-data",
                headers: {
                    "L-XSRF-TOKEN": "@(csrf.GetAndStoreTokens(Context).RequestToken)"
                },
                /**
                 * REFERENCE    https://www.jianshu.com/p/eb119affdc25
                 * THANK        https://www.jianshu.com/u/9ca9c65ce397
                 */
                xhr: function () {
                    var xhr = $.ajaxSettings.xhr();
                    if (xhr.upload) {
                        xhr.upload.addEventListener("progress", function (e) {
                            var loaded = e.loaded;
                            var tot = e.total;
                            //  console.log(">>"+Id_);
                            var per = Math.floor(100 * loaded / tot);
                            $("#SaveProgressSpan").val(per + "%");
                        }, false);
                        return xhr;
                    }
                },
                /**
                 * Retuen the id
                 * @@param {number} Id The id
                 */
                success: function () {
                    history.go(-1);
                }
                //  #endregion
            });
        }

        /**
         * (Id ,MD5) ===> ID8MD5Array
         * @@param {string}Id -The id of file input element
         * @@param {string}MD5 -The MD5 string
         * @@param {boolean} IsEArticleVideo - Flag a file is video of article or not, the default is false
         */
        AddId8MD5(Id, MD5,IsEArticleVideo=false) {
            if (!ID8MD5Array.some((value, index, array) => { value["ID"] == Id && value["MD5"] == MD5 })) {
                ID8MD5Array.push({ ID: Id, MD5:MD5,IsEArticleVideo:IsEArticleVideo });
            }
        }

        FormSubmitClick(Editor) {
            await this.CheckMD5();

        }
    }

    var _Editor = window.wangEditor;
    var Editor = new _Editor("#MenuToolbar","#_ContentEditor");

    var _EditPartial_Data_ = new _EditPartial_Data();
    var _EditPartial_Value_ = new _EditPartial_Value();
    var _EditPartial_Service_ = new _EditPartial_Service();
    var ID8MD5Array = new Array();

    $(document).ready(function () {

        _EditPartial_Data_.ReadyEditor(Editor);

        $("#EArticles_Form_Submit_A").on("click", function () {
            _EditPartial_Service_.FormSubmitClick(Editor);
            event.preventDefault();
        });

        $("#_ContentEditor").on("click", function () {
            $(".w-e-text").focus();
        });

        $("#VideoSelectBtn").on("click", function () {
            if ($("#video_row_div input:last").val() != "") {
                let _LVideoFileInput = _EditPartial_Value_.LVideoFileInput(_Data_.NewGuid());
                                $(_LVideoFileInput).attr("form", "EArticles_Form");
                $("#video_row_div").append(_LVideoFileInput);
            }
            $("#video_row_div input:last").click();
            event.preventDefault();
        });
        $("#AttachmentSelectBtn").on("click", function () {
            if ($("#attachment_row_div input:last").val() != "") {
                let _LAttachmentFileInput = _EditPartial_Value_.LAttachmentFileInput(_Data_.NewGuid());
                $(_LAttachmentFileInput).attr("form", "EArticles_Form");
                $("#attachment_row_div").append(_LAttachmentFileInput);
            }
            $("#attachment_row_div input:last").click();
            event.preventDefault();
        });

        $("#attachment_div").mouseover(function () {
            $("#attachment_list_div").show();
        });


        $("#attachment_div").mouseout(function () {

            $("#attachment_list_div").hide();
        });

        $("#video_div").mouseover(function () {

            $("#video_list_div").show();
        });

        $("#video_div").mouseout(function () {

            $("#video_list_div").hide();
        });

    });
</script>
<style>

    #Title {
        text-align: center;
    }

    #_ContentEditor {
        height: 500px;
        border: dotted;
        border-radius: 10px;
        overflow: hidden;
    }

    .w-e-text {
        overflow-y: scroll;
    }

    .w-e-toolbar {
        display: flex;
        flex-wrap: wrap;
    }

    .LookForImageIcon {
        zoom: 200%;
    }
</style>