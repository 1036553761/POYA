@*
    @model IEnumerable<POYA.Areas.EduHub.Models.EArticle>
*@
@using POYA.Areas.EduHub.Models;


@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var UserId = ViewData["UserId"].ToString();
}

<div class="row">
    <div class="col col-4">
        <img src="~/img/article.bmp" class=" main-icon" title="@Localizer["Article"]" />
        <span style="font-size:200%">@Localizer["Article"]</span>
    </div>
    <a class="col offset-4 offset-md-2 offset-sm-2 offset-lg-4 col-2 col-lg-1" asp-action="Create" title="@Localizer["Add"]">
        <img src="~/img/add.bmp" style="max-height:50px;" />
    </a>
    <a class="col col-2 col-lg-1" asp-action="Index" asp-route-IsIndividual="@((bool)ViewData["IsIndividual"]?"false":"true")"
       title="@((bool)ViewData["IsIndividual"]?Localizer["View all"]:Localizer["Just me"])">
        <img src="~/img/@((bool)ViewData["IsIndividual"]?"total.bmp":"individual.bmp")" style="max-height:50px;" />
    </a>

</div>


<table class="table">

    <tbody>
        @foreach (var item in ViewData["EArticles"] as IPagedList<EArticle>)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" title="@(item.Title)" class="title">@Html.DisplayFor(modelItem => item.Title)</a>
                    <span class="author">
                        @($"{item.UserName}") &#9998; @($"{item.DOPublishing.LocalDateTime.ToShortDateString()}")
                        @if (item.DOUpdating != null)
                        {
                            <span style="font-size:150%">&#10226;</span>
                            <span>@(item.DOUpdating?.LocalDateTime.ToShortDateString())</span>
                        }


                    </span>
                    @if (UserId == item.UserId)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" title="@Localizer["Edit"]">&#9997;</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" title="@Localizer["Delete"]">&#10008;</a>
                    }
                </td>

            </tr>
        }
    </tbody>
</table>
@(Html.PagedListPager((IPagedList<EArticle>)ViewData["EArticles"], _page => Url.Action("Index", new { _page = _page }),
    PagedListRenderOptions.OnlyShowFivePagesAtATime))

@section Scripts{
    <script>
        class Service {

            /**
             * View all or just me
             * param {boolean} IsIndividual - view user's article only or view all
             */
            /*
            ChangeAuthorType(IsIndividual) {
                window.location.href = "@@(Url.Action("Index"))"+"?IsIndividual="+IsIndividual;
            }
            */
        }
        var _Service = new Service();

        $(document).ready(function () {
            /*
            $("#AuthorTypeSelect option[value='@@(ViewData["IsIndividual"].ToString().ToLower())']").attr( "selected", true );
            $("#AuthorTypeSelect").on("change", function () {
                _Service.ChangeAuthorType($("#AuthorTypeSelect option:selected").val())
            });
                */
        });
    </script>
}

@section Styles{
    <link href="~/css/PagedList.css" rel="stylesheet" type="text/css" />
    <style>
        .author {
            font-size: 60%;
            color: blue;
        }

        .title {
            font-size: 120%;
            font-weight: bold;
            color: coral;
        }

        .main-icon {
            max-height: 80px;
            max-width: 80px;
        }
    </style>
}

@*
     <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UserId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SubjectId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GradeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TypeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsLegal)
            </th>
            <th></th>
        </tr>
    </thead>
*@